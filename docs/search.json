[{"path":"https://github.com/paulnorthrop/threshr/articles/threshr-vignette.html","id":"cross-validatory-predictive-performance-for-i-i-d--data","dir":"Articles","previous_headings":"","what":"Cross-validatory predictive performance for i.i.d. data","title":"Introducing threshr: Threshold Selection and Uncertainty for Extreme Value Analysis","text":"provide brief outline methodology underlying ithresh. full details see Northrop, Attalides, Jonathan (2017). Consider set training thresholds \\(u_1, \\ldots, u_k\\). validation threshold \\(v = u_k\\) defines validation data: indicators whether observation exceeds \\(v\\) , , amount \\(v\\) exceeded. given training threshold leave-one-cross-validation estimates quality predictive inference individual omitted samples based Bayesian inferences binomial-GP model. Importance sampling used reduce computation time: two posterior samples required training threshold. Simulation posterior distributions binomial-GP parameters performed using revdbayes package (Northrop 2017). first release threshr binomial probability assumed independent parameters GP distribution priori. relaxed later release. user can choose selection -built prior distributions may specify prior GP models parameters. default Beta(1/2, 1/2) Jeffreys’ prior used threshold exceedance probability binomial distribution generalization Maximal Data Information (MDI) prior used GP parameters. See documentation ithresh Northrop, Attalides, Jonathan (2017) details latter. use storm peak significant wave heights datasets analysed Northrop, Attalides, Jonathan (2017) Gulf Mexico (gom, 315 observations) northern North Sea (ns, 628 observations) illustrate code. enough exceedances validation threshold \\(v = u_k\\) enable predictive performances training thresholds compared. Jonathan Ewans (2013) recommend making inferences GP distribution fewer 50 exceedances. bear rule--thumb mind setting vectors training thresholds . default plot method objects returned ithresh estimated measures predictive performance, normalized sum 1, training threshold. See equations (7) (14) Northrop, Attalides, Jonathan (2017).  summary method identifies training threshold estimated perform best. plot method can also produce plot posterior sample GP parameters generated using training threshold chosen user, e.g. argument which_u = 5 specifies fifth element vector training thresholds, using best threshold, .","code":"library(threshr)  # Set the size of the posterior sample simulated at each threshold n <- 10000  ## North Sea significant wave heights  # Set a vector of training thresholds u_vec_ns <- quantile(ns, probs = seq(0.1, 0.85, by = 0.05)) # Compare the predictive performances of the training thresholds ns_cv <- ithresh(data = ns, u_vec = u_vec_ns, n = n)  ## Gulf of Mexico significant wave heights  # Set a vector of training thresholds u_vec_gom <- quantile(gom, probs = seq(0.1, 0.8, by = 0.05)) # Compare the predictive performances of the training thresholds gom_cv <- ithresh(data = gom, u_vec = u_vec_gom, n = n) plot(ns_cv, lwd = 2, cex.axis = 0.8) mtext(\"North Sea : significant wave height / m\", side = 3, line = 2.5)  plot(gom_cv, lwd = 2, cex.axis = 0.8) mtext(\"Gulf of Mexico: significant wave height / m\", side = 3, line = 2.5) summary(ns_cv) #>        v v quantile best u best u quantile index of u_vec #> 1 5.6972         85  2.204              25              4 summary(gom_cv) #>       v v quantile best u best u quantile index of u_vec #> 1 4.607         80 3.3878              60             11 # Plot of Generalized Pareto posterior sample at the best threshold # (based on the lowest validation threshold) plot(ns_cv, which_u = \"best\") plot(gom_cv, which_u = \"best\")"},{"path":"https://github.com/paulnorthrop/threshr/articles/threshr-vignette.html","id":"predictive-inference-for-future-extremes","dir":"Articles","previous_headings":"","what":"Predictive inference for future extremes","title":"Introducing threshr: Threshold Selection and Uncertainty for Extreme Value Analysis","text":"Let \\(M_N\\) denote largest value observed time period length \\(N\\) years. predict method objects returned ithresh performs predictive inference \\(M_N\\) based either single training threshold weighted average inferences multiple training thresholds.","code":""},{"path":"https://github.com/paulnorthrop/threshr/articles/threshr-vignette.html","id":"single-training-threshold","dir":"Articles","previous_headings":"Predictive inference for future extremes","what":"Single training threshold","title":"Introducing threshr: Threshold Selection and Uncertainty for Extreme Value Analysis","text":"default threshold estimated perform best used. different threshold can selected using argument which_u. Using type = \"d\" produces predictive density function. values \\(N\\) can set using n_years. default \\(N = 100\\).","code":"# Predictive distribution function best_p <- predict(gom_cv, n_years = c(100, 1000), type = \"d\") plot(best_p)"},{"path":"https://github.com/paulnorthrop/threshr/articles/threshr-vignette.html","id":"inferences-averaged-over-multiple-thresholds","dir":"Articles","previous_headings":"Predictive inference for future extremes","what":"Inferences averaged over multiple thresholds","title":"Introducing threshr: Threshold Selection and Uncertainty for Extreme Value Analysis","text":"option selected using which_u = \"\". user can specify prior probability threshold using u_prior. default thresholds receive equal prior probability, case weights applied individual training thresholds displayed threshold diagnostic plot . default, type = \"p\" produces predictive distribution function. which_u = \"\" n_years must length one. default \\(N = 100\\).  expect, estimated distribution function obtained weighted average thresholds lies pointwise envelope curves individual thresholds.","code":"### All thresholds plus weighted average of inferences over all thresholds all_p <- predict(gom_cv, which_u = \"all\") plot(all_p)"},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul J. Northrop. Author, maintainer, copyright holder. Nicolas Attalides. Author.","code":""},{"path":"https://github.com/paulnorthrop/threshr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Northrop PJ, Attalides N (2025). threshr: Threshold Selection Uncertainty Extreme Value Analysis. R package version 1.0.7, https://paulnorthrop.github.io/threshr/.","code":"@Manual{,   title = {threshr: Threshold Selection and Uncertainty for Extreme Value Analysis},   author = {Paul J. Northrop and Nicolas Attalides},   year = {2025},   note = {R package version 1.0.7},   url = {https://paulnorthrop.github.io/threshr/}, }"},{"path":[]},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/index.html","id":"what-does-threshr-do","dir":"","previous_headings":"Threshold Selection and Uncertainty for Extreme Value Analysis","what":"What does threshr do?","title":"Threshold Selection and Uncertainty for Extreme Value Analysis","text":"threshr package deals primarily selection thresholds use extreme value models. also performs predictive inferences future extreme values. inferences can either based single threshold weighted average inferences multiple thresholds. weighting reflects estimated measure predictive performance threshold can incorporate prior probabilities supplied user. moment simplest case, data can treated independent identically distributed observations, considered, described Northrop et al. (2017). Future releases tackle general situations.","code":""},{"path":"https://github.com/paulnorthrop/threshr/index.html","id":"a-simple-example","dir":"","previous_headings":"Threshold Selection and Uncertainty for Extreme Value Analysis","what":"A simple example","title":"Threshold Selection and Uncertainty for Extreme Value Analysis","text":"main function threshr package ithresh. uses Bayesian leave-one-cross-validation compare extreme value predictive ability resulting use user-supplied set thresholds. following code produces threshold diagnostic plot using dataset gom containing 315 storm peak significant waveheights. set vector u_vec thresholds; call ithresh, supplying data thresholds; use plot results. minimal example (ithresh arguments) thresholds judged terms quality prediction whether validation observation lies highest threshold u_vec , , much exceeds highest threshold.","code":"library(threshr) u_vec_gom <- quantile(gom, probs = seq(0, 0.9, by = 0.05)) gom_cv <- ithresh(data = gom, u_vec = u_vec_gom) plot(gom_cv)"},{"path":"https://github.com/paulnorthrop/threshr/index.html","id":"installation","dir":"","previous_headings":"Threshold Selection and Uncertainty for Extreme Value Analysis","what":"Installation","title":"Threshold Selection and Uncertainty for Extreme Value Analysis","text":"get current released version CRAN:","code":"install.packages(\"threshr\")"},{"path":"https://github.com/paulnorthrop/threshr/index.html","id":"vignette","dir":"","previous_headings":"Threshold Selection and Uncertainty for Extreme Value Analysis","what":"Vignette","title":"Threshold Selection and Uncertainty for Extreme Value Analysis","text":"See vignette(\"threshr-vignette\", package = \"threshr\") overview package.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://github.com/paulnorthrop/threshr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://github.com/paulnorthrop/threshr/reference/gom.html","id":null,"dir":"Reference","previous_headings":"","what":"Storm peak significant wave heights from the Gulf of Mexico — gom","title":"Storm peak significant wave heights from the Gulf of Mexico — gom","text":"numeric vector containing 315 hindcasts storm peak significant wave heights, metres, 1900 2005 unnamed location Gulf Mexico.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/gom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Storm peak significant wave heights from the Gulf of Mexico — gom","text":"","code":"gom"},{"path":"https://github.com/paulnorthrop/threshr/reference/gom.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Storm peak significant wave heights from the Gulf of Mexico — gom","text":"vector containing 315 observations.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/gom.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Storm peak significant wave heights from the Gulf of Mexico — gom","text":"Oceanweather Inc. (2005) GOMOS – Gulf Mexico hindcast study.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/gom.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Storm peak significant wave heights from the Gulf of Mexico — gom","text":"Northrop, P. J., N. Attalides, P. Jonathan. (2017).   Cross-Validatory Extreme Value Threshold Selection Uncertainty   Application Ocean Storm Severity. Journal Royal   Statistical Society: Series C (Applied Statistics), 66(1),   93-120. doi:10.1111/rssc.12159 .","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/ithresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Threshold selection in the i.i.d. case (peaks over threshold) — ithresh","title":"Threshold selection in the i.i.d. case (peaks over threshold) — ithresh","text":"Produces diagnostic plot assist selection extreme value threshold case data can treated independent identically distributed (..d.) observations.  example, observations cluster maxima resulting declustering time series data.  predictive ability models fitted using user-supplied set thresholds assessed using leave-one-cross-validation Bayesian setup. models based Generalized Pareto (GP) distribution threshold excesses binomial model probability threshold exceedance.  See Northrop et al. (2017) details.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/ithresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Threshold selection in the i.i.d. case (peaks over threshold) — ithresh","text":"","code":"ithresh(data, u_vec, ..., n_v = 1, npy = NULL, use_rcpp = TRUE)"},{"path":"https://github.com/paulnorthrop/threshr/reference/ithresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Threshold selection in the i.i.d. case (peaks over threshold) — ithresh","text":"data numeric vector observations.  missing values removed.  argument npy (see ) may supplied attribute data using attr(data, \"npy\") <- value, value value npy (see attr). npy supplied twice, attr(data, \"npy\")) using npy argument, former used. u_vec numeric vector. vector training thresholds inferences made binomial-GP model.  set sample quantiles  data using quantile.  duplicated values removed. ... (optional) arguments passed   revdbayes function   rpost_rcpp (rpost),   use generalized ratio--uniforms method simulate   extreme value posterior distributions.   particular: n. size posterior sample used perform     predictive inference.  Default: n = 1000. prior. prior GP parameters passed     revdbayes function set_prior.     Can either character scalar chooses -built prior,     user-supplied R function pointer compiled C++ function.     See set_prior documentation details     -built priors.     See revdbayes vignette     Faster simulation     using revdbayes information creating     pointer C++ function.  See also Examples section. user supplies R function rpost     used posterior simulation, rather (faster)     rpost_rcpp, regardless input value     use_rcpp. Default: prior = \"mdi\" = 0.6 min_xi = -1.     particular prior studied Northrop et al. (2017). h_prior. list arguments     (hyperparameters) GP prior specified prior. bin_prior. prior threshold exceedance probability     \\(p\\) passed revdbayes function     set_bin_prior.     Can either character scalar chooses -built prior,     user_supplied R function. Default: prior = \"jeffreys\", .e. Beta(1/2, 1/2). h_bin_prior. list arguments     (hyperparameters) binomial prior specified bin_prior.     See set_bin_prior documentation details     -built priors. trans. character scalar: either \"none\"     \"BC\".  See rpost_rcpp details.     default \"none\", usually faster \"BC\".     However, threshold excesses using     trans = \"BC\" can make optimizations involved     generalized ratio--uniforms algorithm stable.  using     trans = \"none\" produces error particular posterior     simulation trans = \"BC\" used instead. n_v numeric scalar. n_v largest values u_vec used (separately) validation threshold training thresholds u_vec lie validation threshold. n_v = 1 training thresholds used validation performed using threshold u_vec[length(u_vec)]. n_v = 2 , addition, assessment performed using u_vec[1], ..., u_vec[length(u_vec) - 1] validation threshold u_vec[length(u_vec) - 1], . npy numeric scalar. mean number observations per year   data, excluding missing values, .e. number   non-missing observations divided total number years non-missing   data.  May supplied using attribute attr(data, \"npy\")   data instead. value npy affect calculation   ithresh, affects subsequent extreme value inferences using   predict.ithresh.  However, setting npy call   rpost, attribute data avoids need   supply npy calling predict.ithresh. use_rcpp logical scalar.  TRUE (default) revdbayes function rpost_rcpp used posterior simulation.  FALSE, user supplies R function set prior GP parameters, (slower) function rpost used.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/ithresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Threshold selection in the i.i.d. case (peaks over threshold) — ithresh","text":"object (list) class \"ithresh\", containing   components pred_perf: numeric matrix length(u_vec)     rows n_v columns.  column contains values     measure predictive performance.  Entries corresponding     cases training threshold validation     threshold NA. u_vec: argument u_vec ithresh. v_vec: numeric vector.  validation thresholds       implied argument n_v ithresh. u_ps: numeric vector. approximate levels       sample quantiles values u_vec correspond,       .e. approximate percentage data lie       element u_vec. v_ps: numeric vector.  values u_ps       correspond validation thresholds. sim_vals: numeric matrix 4 columns       n x length(u_vec) rows.  \\(j\\)th block       n rows contains columns 1-3 posterior samples       threshold exceedance probability, GP scale       parameter GP shape parameter respectively,       based training threshold u_vec[j],       column 4 value \\(j\\). n: numeric scalar.  value n. npy: numeric scalar.  value npy. data: argument data ithresh       detailed , missing values removed. use_rcpp: logical scalar indicating whether       rpost_rcpp (use_rcpp = TRUE)       rpost (use_rcpp = FALSE)       used posterior simulation. for_post: list containing arguments       rpost_rcpp       (rpost) called, including       user-supplied arguments functions. call: call ithresh.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/ithresh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Threshold selection in the i.i.d. case (peaks over threshold) — ithresh","text":"given threshold u_vec: number values data exceed threshold,     amounts (threshold excesses) value     exceed threshold calculated; rpost_rcpp     (rpost) used sample posterior     distributions parameters GP model threshold     excesses binomial model probability threshold     exceedance; ability binomial-GP model predict data     thresholded validation threshold(s) specified n_v     assessed using leave-one-cross-validation (measure     given equation (7) Northrop et al. (2017). See Northrop et al. (2017) introductory threshr vignette   details examples.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/ithresh.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Threshold selection in the i.i.d. case (peaks over threshold) — ithresh","text":"Northrop, P.J. Attalides, N. (2016) Posterior propriety   Bayesian extreme value analyses using reference priors   Statistica Sinica, 26(2), 721–743   doi:10.5705/ss.2014.034 . Northrop, P. J., Attalides, N. Jonathan, P. (2017)   Cross-validatory extreme value threshold selection uncertainty   application ocean storm severity.   Journal Royal Statistical Society Series C: Applied   Statistics, 66(1), 93-120.   doi:10.1111/rssc.12159 Jonathan, P. Ewans, K. (2013) Statistical modelling   extreme ocean environments marine design : review.   Ocean Engineering, 62, 91-109.   doi:10.1016/j.oceaneng.2013.01.004","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/reference/ithresh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Threshold selection in the i.i.d. case (peaks over threshold) — ithresh","text":"","code":"# Note: # 1. Smoother plots result from making n larger than the default n = 1000. # 2. In some examples below validation thresholds rather higher than is #    advisable have been used, with far fewer excesses than the minimum of #    50 suggested by Jonathan and Ewans (2013).  ## North Sea significant wave heights, default prior ----------------------- #' # A plot akin to the top left of Figure 7 in Northrop et al. (2017) #' # ... but with fewer training thresholds  u_vec_ns <- quantile(ns, probs = seq(0.1, 0.9, by = 0.1)) ns_cv <- ithresh(data = ns, u_vec = u_vec_ns, n_v = 2) plot(ns_cv, lwd = 2, add_legend = TRUE, legend_pos = \"topright\") mtext(\"significant wave height / m\", side = 3, line = 2.5)   ## Gulf of Mexico significant wave heights, default prior ------------------  u_vec_gom <- quantile(gom, probs = seq(0.2, 0.9, by = 0.1)) # Setting a prior using its name and parameter value(s) -------------------- # This example gives the same prior as the default gom_cv <- ithresh(data = gom, u_vec = u_vec_gom, n_v = 2, prior = \"mdi\",                   h_prior = list(a = 0.6))  ## Setting a user-defined (log-)prior R function --------------------------- # This example also gives the same prior as the default # (It will take longer to run than the example above because ithresh detects #  that the prior is an R function and sets use_rcpp to FALSE.) # \\donttest{ user_prior <- function(pars, a, min_xi = -1) {   if (pars[1] <= 0 | pars[2] < min_xi) {     return(-Inf)   }   return(-log(pars[1]) - a * pars[2]) } user_bin_prior <- function(p, ab) {   return(stats::dbeta(p, shape1 = ab[1], shape2 = ab[2], log = TRUE)) } gom_cv <- ithresh(data = gom, u_vec = u_vec_gom, n_v = 2, prior = user_prior,                   h_prior = list(a = 0.6), bin_prior = user_bin_prior,                   h_bin_prior = list(ab = c(1 / 2, 1 / 2))) # } ## Setting a user-defined (log-)prior (pointer to a) C++ function ---------- # We make use of a C++ function and function create_prior_xptr() to create # the required pointer from the revdbayes package  prior_ptr <- revdbayes::create_prior_xptr(\"gp_flat\") gom_cv <- ithresh(data = gom, u_vec = u_vec_gom, n_v = 2, prior = prior_ptr,                   h_prior = list(min_xi = -1))"},{"path":"https://github.com/paulnorthrop/threshr/reference/ns.html","id":null,"dir":"Reference","previous_headings":"","what":"Storm peak significant wave heights from the North Sea — ns","title":"Storm peak significant wave heights from the North Sea — ns","text":"numeric vector containing 628 hindcasts storm peak significant wave heights, metres, 1964 1995 unnamed location North Sea.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/ns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Storm peak significant wave heights from the North Sea — ns","text":"","code":"ns"},{"path":"https://github.com/paulnorthrop/threshr/reference/ns.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Storm peak significant wave heights from the North Sea — ns","text":"vector containing 628 observations.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/ns.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Storm peak significant wave heights from the North Sea — ns","text":"Oceanweather Inc. (1995) NEXT – North Sea hindcast study.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/ns.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Storm peak significant wave heights from the North Sea — ns","text":"Northrop, P. J., N. Attalides, P. Jonathan. (2017).   Cross-Validatory Extreme Value Threshold Selection Uncertainty   Application Ocean Storm Severity. Journal Royal   Statistical Society: Series C (Applied Statistics), 66(1),   93-120. doi:10.1111/rssc.12159 .","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot diagnostics an ithresh object — plot.ithresh","title":"Plot diagnostics an ithresh object — plot.ithresh","text":"plot method class \"ithresh\".  Produces extreme value threshold diagnostic plot based analysis performed ithresh.  Can also used produce plot posterior sample generated ithresh particular training threshold.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot diagnostics an ithresh object — plot.ithresh","text":"","code":"# S3 method for class 'ithresh' plot(   x,   y,   ...,   which_v = NULL,   prob = TRUE,   top_scale = TRUE,   add_legend = FALSE,   legend_pos = \"topleft\",   which_u = NULL )"},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot diagnostics an ithresh object — plot.ithresh","text":"x object class \"ithresh\", result call ithresh. y used. ... Additional arguments passed matplot /legend /axis. which_u supplied arguments passed plot.evpost. which_v numeric scalar vector. which_u supplied (threshold diagnostic plot   required) which_v specifies validation thresholds,   , components x$v_vec, include plot. which_u supplied (plot posterior sample given   threshold required) which_v numeric scalar   indicates element object$v_vec used selecting   single threshold (which_u = \"best\").   Note: default, which_v = 1 gives lowest   validation thresholds object$v_vec. prob logical scalar.  TRUE levels thresholds represented proportion observations lie threshold.  prob = FALSE values thresholds used. top_scale logical scalar indicating Whether add scale top horizontal axis.  added gives threshold scale chosen prob. add_legend logical scalar indicating whether add legend plot.  method = \"cv\" legend gives levels validation thresholds. legend_pos position legend (required) specified using argument x legend. which_u Either character scalar numeric scalar.   which_u supplied plot.evpost   used produce plot posterior sample generated using   particular training threshold. default scatter plot posterior   sample Generalized Pareto parameters produced. which_u = \"best\" training threshold achieving largest   measure predictive performance object$pred_perf, based   validation threshold selected using which_v, used.   See summary.ithresh print best thresholds   validation threshold. Otherwise, which_u numeric scalar selects training   threshold x$u_vec[which_u].  Therefore, which_u must   integer 1, ..., length(x$u_vec).","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot diagnostics an ithresh object — plot.ithresh","text":"which_u supplied object   plot.evpost called returned (invisibly).   Otherwise, list returned (invisibly) two components.   x vector containing coordinates plotted   (lower) horizontal axis.   y length(u_vec) n_v matrix   threshold weights obtained normalising columns   matrix pred_perf returned ithresh.   See equation (14) Northrop et al. (2017).","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithresh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot diagnostics an ithresh object — plot.ithresh","text":"Produces plots threshold weights, defined  equation (14) Northrop et al. (2017) training threshold.  line  produced validation thresholds chosen which_v.  result plot like top row Figure 7  Northrop et al. (2017). possible curve plot may incomplete.  indicates   , particular threshold level, measure predictive   performance -Inf. occurs observation data   lies estimated upper end point predictive distribution   produced observation removed.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithresh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot diagnostics an ithresh object — plot.ithresh","text":"","code":"# [Smoother plots result from making n larger than the default n = 1000.]  # Threshold diagnostic plot u_vec_gom <- quantile(gom, probs = seq(0, 0.9, by = 0.05)) gom_cv <- ithresh(data = gom, u_vec = u_vec_gom, n_v = 3) plot(gom_cv, lwd = 2, add_legend = TRUE, legend_pos = \"topleft\") mtext(\"significant wave height / m\", side = 3, line = 2.5)   # Plot of Generalized Pareto posterior sample at the best threshold # (based on the lowest validation threshold) plot(gom_cv, which_u = \"best\")  # See which threshold was used summary(gom_cv) #>        v v quantile best u best u quantile index of u_vec #> 1 4.6070         80 3.1598              55             12 #> 2 5.1302         85 3.1598              55             12 #> 3 5.8246         90 3.6545              65             14  # Plot of Generalized Pareto posterior sample at the highest threshold n_u <- length(u_vec_gom) plot(gom_cv, which_u = n_u, points_par = list(pch = 20, col = \"grey\"))"},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithreshpred.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot diagnostics an ithreshpred object — plot.ithreshpred","title":"Plot diagnostics an ithreshpred object — plot.ithreshpred","text":"plot method class \"ithreshpred\".  Produces plots summarise predictive inferences made predict.ithresh.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithreshpred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot diagnostics an ithreshpred object — plot.ithreshpred","text":"","code":"# S3 method for class 'ithreshpred' plot(x, ..., ave_only = FALSE, add_best = FALSE)"},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithreshpred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot diagnostics an ithreshpred object — plot.ithreshpred","text":"x object class \"ithreshpred\", result call ithresh. ... Additional arguments passed plot.evpred. ave_only logical scalar.  relevant predict.ithresh called which_u = \"\". TRUE plot curve weighted average multiple training thresholds. FALSE also plot curve training threshold. add_best logical scalar.  TRUE best threshold, judged using validation threshold selected using argument which_v supplied predict.ithresh, highlighted plotting different line style.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithreshpred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot diagnostics an ithreshpred object — plot.ithreshpred","text":"list containing graphical parameters using producing   plot including arguments supplied via ... returned (invisibly).","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithreshpred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot diagnostics an ithreshpred object — plot.ithreshpred","text":"Single threshold case,   predict.ithresh called numeric scalar   which_u which_u = \"best\".   plot.evpred called produce plot. Multiple threshold case,   predict.ithresh called which_u = \"\".   , plot.evpred called now   estimated predictive distribution function (type = \"p\" used   call predict.ithresh) density function   (type = \"d\") plotted training thresholds   (grey lines) result weighted average   different training thresholds (black line).   graphical parameters, lty, lwd col   passed via ... first element relates   weighted average remaining length(x$u_vec) elements   respective training thresholds u_vec.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.ithreshpred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot diagnostics an ithreshpred object — plot.ithreshpred","text":"","code":"u_vec_gom <- quantile(gom, probs = seq(0, 0.9, by = 0.05)) gom_cv <- ithresh(data = gom, u_vec = u_vec_gom, n_v = 3)  # Note: gom_cv$npy contains the correct value of npy (it was set in the #       call to ithresh, via attr(gom, \"npy\"). #       If object$npy doesn't exist then the argument npy must be supplied #       in the call to predict().  ### Best training threshold based on the lowest validation threshold  # Predictive distribution function npy_gom <- length(gom)/105 best_p <- predict(gom_cv, n_years = c(100, 1000)) plot(best_p)   # Predictive density function best_d <- predict(gom_cv, type = \"d\", n_years = c(100, 1000)) plot(best_d)   ### All thresholds plus weighted average of inferences over all thresholds  # Predictive distribution function all_p <- predict(gom_cv, which_u = \"all\") plot(all_p)   # Predictive density function all_d <- predict(gom_cv, which_u = \"all\", type = \"d\") plot(all_d)   ### ... and highlight the best threshold  plot(all_p, add_best = TRUE)  plot(all_d, add_best = TRUE)"},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.stability.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot diagnostics for a stability object — plot.stability","title":"Plot diagnostics for a stability object — plot.stability","text":"plot method objects class \"stability\" returned stability","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot diagnostics for a stability object — plot.stability","text":"","code":"# S3 method for class 'stability' plot(   x,   y,   ...,   prob = TRUE,   top_scale = c(\"none\", \"excesses\", \"opposite\"),   vertical = TRUE )"},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.stability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot diagnostics for a stability object — plot.stability","text":"x object class \"stability\", result call stability. y used. ... Additional arguments passed matplot, axis /segments. prob logical scalar.  TRUE levels thresholds lower horizontal axis represented proportion observations lie threshold.  prob = FALSE values thresholds used. top_scale character scalar. top_scale = \"none\" axis labels appear upper horizontal axis. top_scale = \"excesses\" number threshold excesses threshold indicated. top_scale = \"opposite\" type threshold level chosen using prob indicated. vertical logical scalar.  confidence intervals depicted using vertical line threshold (TRUE) joining confidence limits across thresholds (FALSE)?","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.stability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot diagnostics for a stability object — plot.stability","text":"addition producing plot list arguments used   matplot, axis   returned (invisibly).","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.stability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot diagnostics for a stability object — plot.stability","text":"Produces simple threshold diagnostic plot based object   returned stability.   MLEs GP shape parameter $\\(\\xi\\)$   approximate conf% confidence intervals   \\(\\xi\\) plotted threshold used fit GP model.   plot used choose threshold underlying GP   shape parameter may approximately constant. See Chapter 4   Coles (2001).  See also vignette \"Introducing threshr\".   described .   See also vignette \"Introducing threshr\".","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/reference/plot.stability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot diagnostics for a stability object — plot.stability","text":"","code":"u_vec_gom <- quantile(gom, probs = seq(0, 0.9, by = 0.05)) gom_stab <- stability(data = gom, u_vec = u_vec_gom) plot(gom_stab)"},{"path":"https://github.com/paulnorthrop/threshr/reference/predict.ithresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictive inference for the largest value observed in N years. — predict.ithresh","title":"Predictive inference for the largest value observed in N years. — predict.ithresh","text":"predict method class \"ithresh\".  Predictive inferences can either based single training threshold using weighted average inferences multiple training thresholds.  single threshold may chosen best performing threshold, judged measure predictive performance calculated ithresh chosen user.  weights used latter case based measures predictive performance prior probabilities assigned training thresholds.  default thresholds given prior probability user can specify prior.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/predict.ithresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictive inference for the largest value observed in N years. — predict.ithresh","text":"","code":"# S3 method for class 'ithresh' predict(   object,   npy = NULL,   n_years = 100,   which_u = c(\"best\", \"all\"),   which_v = 1L,   u_prior = rep(1, length(object$u_vec)),   type = c(\"p\", \"d\", \"q\", \"i\", \"r\"),   hpd = FALSE,   x = NULL,   ... )"},{"path":"https://github.com/paulnorthrop/threshr/reference/predict.ithresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictive inference for the largest value observed in N years. — predict.ithresh","text":"object object class \"ithresh\", result call ithresh. npy numeric scalar. mean number observations per year data, excluding missing values, .e. number non-missing observations divided total number years non-missing data. n_years numeric vector. Value(s) N.  which_u = \"\" n_years must length one. which_u Either character scalar numeric scalar.   which_u character scalar must either \"best\" \"\". which_u = \"best\" single threshold achieving largest   measure predictive performance object$pred_perf, based   validation threshold selected using which_v, used   perform prediction.  See summary.ithresh print   best thresholds validation threshold. which_u = \"\" thresholds used   perform prediction.  inferences threshold weighted   according posterior threshold weights given   equation (15) Northrop et al. (2017) based prior probabilities   thresholds u_prior column which_v measures   predictive performance object$pred_perf. Otherwise, which_u numeric scalar indicates   element object$u_vec user wishes select single   threshold base prediction, , which_u must   integer 1, ..., length(object$u_vec). which_v numeric scalar. Indicates element object$v_vec used selecting single threshold (which_u = \"best\") weighting inferences thresholds (which_u = \"\"). Note: default, which_v = 1 gives lowest validation thresholds object$v_vec. u_prior numeric vector.  Prior probabilities training   thresholds object$u_vec.  used which_u = \"\". first   length(object$u_vec) - length(object$v_vec) + which_v   elements u_prior used.  training   thresholds including object$v_vec[which_v] relevant.   u_prior must length length(object$u_vec)   length(object$u_vec) - length(object$v_vec) + which_v. u_prior supplied (relevant) training thresholds   given equal prior probability.   u_prior normalized sum equal 1 inside   predict.ithresh. type character vector.   Passed predict.evpost.   Indicates type inference required: \"p\" predictive distribution function, \"d\" predictive density function, \"q\" predictive quantile function, \"\" predictive intervals (see ... set level), \"r\" random generation predictive distribution. which_u = \"\" type = \"p\" type = \"d\"   allowed. hpd logical scalar.  argument hpd predict.evpost. relevant type = \"\". x numeric vector.  argument x predict.evpost.  current context must vector (matrix, suggested documentation predict.evpost).  x supplied default value set within predict.evpost. ... Additional arguments passed predict.evpost.  particular: level, can used set (multiple) levels predictive intervals type = \"\"; lower_tail (relevant type = \"p\" \"q\") log (relevant type = \"d\").","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/predict.ithresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictive inference for the largest value observed in N years. — predict.ithresh","text":"list object class \"ithreshpred\" similar   structure object class \"evpred\" returned   predict.evpost returned invisibly.   addition, object contains   u_vec = object$u_vec v_vec = object$v_vec,   which_v index best_u   u_vec = object$u_vec best training threshold based   value which_v.   also contains value Box-Cox transformation parameter   lambda.  always equal 1 object   returned ithresh. which_u = \"\" list also contains posterior threshold weights     component post_thresh_wts component y matrix length{x} rows     1 + length(object$u_vec) - length(object$v_vec) + which_v     columns.  Column 1 contains estimated predictive distribution     function (type = \"p\") density function (type = \"d\")     obtained using weighted average inferences different     training thresholds.  columns contain estimated     functions training thresholds u_vec.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/predict.ithresh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predictive inference for the largest value observed in N years. — predict.ithresh","text":"function predict.evpost used   perform predictive based binomial-GP posterior sample generated   using given training threshold.  mathematical details   single threshold multiple threshold cases see Sections 2.3 3   Northrop et al. (2017) respectively.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/predict.ithresh.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predictive inference for the largest value observed in N years. — predict.ithresh","text":"Northrop, P. J., Attalides, N. Jonathan, P. (2017)   Cross-validatory extreme value threshold selection uncertainty   application ocean storm severity.   Journal Royal Statistical Society Series C: Applied   Statistics, 66(1), 93-120. doi:10.1111/rssc.12159","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/reference/predict.ithresh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictive inference for the largest value observed in N years. — predict.ithresh","text":"","code":"# Note: #'  In the examples below validation thresholds rather higher than is #   advisable have been used, with far fewer excesses than the minimum of #   50 suggested by Jonathan and Ewans (2013).  # Gulf of Mexico significant wave heights, default priors. u_vec_gom <- quantile(gom, probs = seq(0, 0.9, by = 0.05)) gom_cv <- ithresh(data = gom, u_vec = u_vec_gom, n_v = 3)  # Note: gom_cv$npy contains the correct value of npy (it was set in the #       call to ithresh, via attr(gom, \"npy\"). #       If object$npy doesn't exist then the argument npy must be supplied #       in the call to predict().  ### Best training threshold based on the lowest validation threshold  # Predictive distribution function best_p <- predict(gom_cv, n_years = c(100, 1000)) plot(best_p)   # Predictive density function best_d <- predict(gom_cv, type = \"d\", n_years = c(100, 1000)) plot(best_d)   # Predictive intervals best_i <- predict(gom_cv, n_years = c(100, 1000), type = \"i\", hpd = TRUE,                   level = c(95, 99)) plot(best_i, which_int = \"both\")  #> Warning: argument 1 does not name a graphical parameter  # See which threshold was used summary(gom_cv) #>        v v quantile best u best u quantile index of u_vec #> 1 4.6070         80 3.1598              55             12 #> 2 5.1302         85 3.6545              65             14 #> 3 5.8246         90 3.6545              65             14  ### All thresholds plus weighted average of inferences over all thresholds  # Predictive distribution function all_p <- predict(gom_cv, which_u = \"all\") plot(all_p)   # Predictive density function all_d <- predict(gom_cv, which_u = \"all\", type = \"d\") plot(all_d)"},{"path":"https://github.com/paulnorthrop/threshr/reference/print.ithresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for objects of class ","title":"Print method for objects of class ","text":"print method class \"ithresh\".","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/print.ithresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for objects of class ","text":"","code":"# S3 method for class 'ithresh' print(x, digits = 2, ...)"},{"path":"https://github.com/paulnorthrop/threshr/reference/print.ithresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for objects of class ","text":"x object inheriting class \"ithresh\", result call ithresh. digits integer. Used number formatting format signif. ... Additional optional arguments. present optional arguments used.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/print.ithresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for objects of class ","text":"argument x, invisibly,   print methods.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/print.ithresh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print method for objects of class ","text":"Prints matrix estimated threshold weights.   row gives weights training threshold given   validation threshold.  row column names approximate   quantile levels thresholds.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/reference/stability.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Pareto parameter estimate stability — stability","title":"Generalized Pareto parameter estimate stability — stability","text":"Uses maximum likelihood estimation fit Generalized Pareto (GP) model threshold excesses range thresholds. threshold excesses treated independent identically distributed (..d.) observations. resulting estimates confidence intervals can plotted, using plot.stability, produce crude graphical diagnostic threshold choice.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Pareto parameter estimate stability — stability","text":"","code":"stability(   data,   u_vec,   prof = FALSE,   conf = 95,   mult = 1:2,   plot_prof = FALSE,   ... )"},{"path":"https://github.com/paulnorthrop/threshr/reference/stability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Pareto parameter estimate stability — stability","text":"data numeric vector observations. u_vec numeric vector thresholds applied data. duplicated values removed.  set sample quantiles data using quantile. prof logical scalar.  Whether calculate confidence intervals GP shape parameter \\(\\xi\\) based profile-likelihood \\(\\xi\\) using MLE plus minus multiple estimated standard error (SE) MLE.  intervals produced former may better take longer calculate. Default: FALSE. conf numeric scalar (0, 100).  Confidence level confidence intervals.  Default: 95%. mult numeric vector length 2.  range values profile log-likelihood \\(\\xi\\) calculated (MLE - mult[1] c SE, MLE + mult[2] c SE), MLE SE MLE estimated standard error \\(\\xi\\) c constant interval gives approximate 100conf% level confidence interval \\(\\xi\\) mult = c(1, 1).  default, mult = c(1, 2), works well cases.  routine fails range \\(\\xi\\) sufficiently wide relevant components mult increased. plot_prof logical scalar.  relevant prof = TRUE. plot_prof = TRUE profile log-likelihood plotted threshold.  FALSE nothing plotted. ... (optional) arguments passed optim function optimizations profile-likelihood \\(xi\\) based.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/stability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Pareto parameter estimate stability — stability","text":"object (list) class \"stability\" components: ests MLEs GP shape parameter \\(\\xi\\). ses Estimated SEs MLEs \\(\\xi\\). lower Lower limit 100conf% confidence intervals      \\(\\xi\\). upper Upper limit 100conf% confidence intervals      \\(\\xi\\). nexc number threshold excesses. u_vec thresholds supplied user. u_ps approximate sample quantiles thresholds      u_vec correspond. data input data. conf input conf. components numeric vector length length(u_vec).","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/stability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized Pareto parameter estimate stability — stability","text":"threshold u_vec GP model fitted maximum   likelihood estimation threshold excesses, .e. amounts   data exceed threshold.  MLEs GP shape   parameter \\(\\xi\\) approximate conf% confidence intervals   \\(\\xi\\) stored plotting (plot.stability)   produce simple graphical diagnostic inform threshold selection.   plot used choose threshold underlying GP   shape parameter may approximately constant. See Chapter 4   Coles (2001).  See also vignette \"Introducing threshr\".","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/stability.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized Pareto parameter estimate stability — stability","text":"Coles, S. G. (2001) Introduction Statistical   Modeling Extreme Values, Springer-Verlag, London.   doi:10.1007/978-1-4471-3675-0_3","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/reference/stability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Pareto parameter estimate stability — stability","text":"","code":"# Set a vector of thresholds u_vec_gom <- quantile(gom, probs = seq(0, 0.9, by = 0.05))  # Symmetric confidence intervals gom_stab <- stability(data = gom, u_vec = u_vec_gom) plot(gom_stab)   # Profile-likelihood-based confidence intervals gom_stab <- stability(data = gom, u_vec = u_vec_gom, prof = TRUE) #> Fitting at threshold number ... #> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  plot(gom_stab)"},{"path":"https://github.com/paulnorthrop/threshr/reference/summary.ithresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing measures of threshold predictive performance — summary.ithresh","title":"Summarizing measures of threshold predictive performance — summary.ithresh","text":"summary method class \"ithresh\"","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/summary.ithresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing measures of threshold predictive performance — summary.ithresh","text":"","code":"# S3 method for class 'ithresh' summary(object, ...)"},{"path":"https://github.com/paulnorthrop/threshr/reference/summary.ithresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing measures of threshold predictive performance — summary.ithresh","text":"object object class \"ithresh\", result call ithresh. ... Additional optional arguments. present optional arguments used.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/summary.ithresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing measures of threshold predictive performance — summary.ithresh","text":"Returns numeric matrix 5 columns n_v rows,   n_v argument ithresh   determines many largest training thresholds used   validation thresholds.  columns contain: column 1: validation threshold v column 2: sample quantile validation threshold     corresponds column 3: best training threshold u judged using     validation threshold v column 4: sample quantile best training     threshold corresponds column 5: index vector u_vec training     thresholds threshold column2 corresponds","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/reference/summary.ithresh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing measures of threshold predictive performance — summary.ithresh","text":"","code":"u_vec_gom <- quantile(gom, probs = seq(0, 0.9, by = 0.05)) gom_cv <- ithresh(data = gom, u_vec = u_vec_gom, n_v = 3) summary(gom_cv) #>        v v quantile best u best u quantile index of u_vec #> 1 4.6070         80 3.3878              60             13 #> 2 5.1302         85 3.3878              60             13 #> 3 5.8246         90 3.3878              60             13"},{"path":"https://github.com/paulnorthrop/threshr/reference/threshr-internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal threshr functions — threshr-internal","title":"Internal threshr functions — threshr-internal","text":"Internal threshr functions","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/threshr-internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal threshr functions — threshr-internal","text":"","code":"bc(x, lambda = 1, lambda_tol = 1/50, m = 4)  inv_bc(x, lambda = 1, lambda_tol = 1/50, m = 4)  yj(x, lambda = 1, lambda_tol = 1/50, m = 4)  inv_yj(x, lambda = 1, lambda_tol = 1/50, m = 4)"},{"path":"https://github.com/paulnorthrop/threshr/reference/threshr-internal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal threshr functions — threshr-internal","text":"functions intended called user.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/threshr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"threshr: Threshold Selection and Uncertainty for Extreme Value Analysis — threshr-package","title":"threshr: Threshold Selection and Uncertainty for Extreme Value Analysis — threshr-package","text":"Provides functions selection extreme value threshold. moment simplest case, data can treated independent identically distributed observations, considered. Future releases tackle general situations. See 'threshr' website information, documentation examples.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/threshr-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"threshr: Threshold Selection and Uncertainty for Extreme Value Analysis — threshr-package","text":"main function threshr package ithresh,   uses leave-one-cross-validation Bayesian setup compare   predictive ability resulting use user-supplied   set thresholds. See vignette(\"threshr-vignette\", package = \"threshr\")   overview package.","code":""},{"path":"https://github.com/paulnorthrop/threshr/reference/threshr-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"threshr: Threshold Selection and Uncertainty for Extreme Value Analysis — threshr-package","text":"Northrop, P. J. (2017). revdbayes: Ratio--Uniforms Sampling   Bayesian Extreme Value Analysis. R package version 1.2.1.   https://cran.r-project.org/package=revdbayes. Northrop, P. J., Attalides, N. Jonathan, P. (2017)   Cross-validatory extreme value threshold selection uncertainty   application ocean storm severity.   Journal Royal Statistical Society Series C: Applied   Statistics, 66(1), 93-120. doi:10.1111/rssc.12159","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/reference/threshr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"threshr: Threshold Selection and Uncertainty for Extreme Value Analysis — threshr-package","text":"Maintainer: Paul J. Northrop p.northrop@ucl.ac.uk [copyright holder] Authors: Nicolas Attalides","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"bug-fixes-and-minor-improvements-1-0-7","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"threshr 1.0.7","text":"Corrected typo description component sim_vals object returned ithresh. u_vec[] u_vec[j]. Thank Ye Liu spotting . Issue 3 Fix upcoming testthat 3.3.0 release (#4). Pull request @hadley.","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"threshr-106","dir":"Changelog","previous_headings":"","what":"threshr 1.0.6","title":"threshr 1.0.6","text":"CRAN release: 2024-07-17","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"bug-fixes-and-minor-improvements-1-0-6","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"threshr 1.0.6","text":"Fixed 3  targets missing (revdbayes) package anchors Rd file ithresh().","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"threshr-105","dir":"Changelog","previous_headings":"","what":"threshr 1.0.5","title":"threshr 1.0.5","text":"CRAN release: 2023-12-02","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"bug-fixes-1-0-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"threshr 1.0.5","text":"Fixed issues incorrect use Rd files.","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"threshr-104","dir":"Changelog","previous_headings":"","what":"threshr 1.0.4","title":"threshr 1.0.4","text":"CRAN release: 2023-09-02","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"bug-fixes-and-minor-improvements-1-0-4","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"threshr 1.0.4","text":"Create help file package correctly, alias threshr-package. Activated 3rd edition testthat package README.md: Used app.codecov.io base codecov link.","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"threshr-103","dir":"Changelog","previous_headings":"","what":"threshr 1.0.3","title":"threshr 1.0.3","text":"CRAN release: 2020-09-14","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"bug-fixes-and-minor-improvements-1-0-3","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"threshr 1.0.3","text":"Tests test-box_cox.R test-inv_box_cox.R modified avoid errors upcoming new release testthat package.","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"threshr-102","dir":"Changelog","previous_headings":"","what":"threshr 1.0.2","title":"threshr 1.0.2","text":"CRAN release: 2020-09-05","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"bug-fixes-and-minor-improvements-1-0-2","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"threshr 1.0.2","text":"ithresh() user-supplied (log-)prior R function can now set binomial probability p threshold exceedance. functionality requires least version 1.3.4 revdbayes package. print method class ithresh added. plot.ithresh() informative error message given inappropriate value argument which_v supplied. predict.ithresh() arguments can now passed revdbayes::predict.evpost. particular, level(s) predictive intervals can set. example added documentation. pkgdown documentation https://paulnorthrop.github.io/threshr/ revdbayes:: used instead revdbayes::: avoid CRAN package check NOTEs.","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"threshr-101","dir":"Changelog","previous_headings":"","what":"threshr 1.0.1","title":"threshr 1.0.1","text":"CRAN release: 2019-03-01","code":""},{"path":"https://github.com/paulnorthrop/threshr/news/index.html","id":"bug-fixes-and-minor-improvements-1-0-1","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"threshr 1.0.1","text":"examples tests modified slightly avoid using unrealistically high low thresholds. Dependence R version changed 3.3.0 avoid CRAN NOTE.","code":""}]
