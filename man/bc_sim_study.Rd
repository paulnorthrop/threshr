% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bc_simulation.R
\name{bc_sim_study}
\alias{bc_sim_study}
\title{Box-Cox threshold selection simulation study}
\usage{
bc_sim_study(sims, rbc_args, bcthresh_args)
}
\arguments{
\item{sims}{An integer scalar.  The number of simulated datasets.}

\item{rbc_args}{A named list of arguments to be passed to \code{rbc},
including any arguments to be passed to \code{sim_fn} via \code{...}
in \code{rbc}.}

\item{bcthresh_args}{A named list of arguments to be passed to
\code{bcthresh}.  In particular: \code{probs, lambda, n, prior}.
The defaults for \code{probs, lambda} and \code{n} are
\code{probs = seq(0, 0.9, 0.1)}, \code{lambda = 1} and \code{n = 1000}.
By default \code{n_v = 1}.  If \code{n_v} is supplied then this value is
ignored, without warning.  Similarly, if \code{data} is supplied then
this is also ignored, without warning.}
}
\value{
An object (a list) of class \code{"bc_sim_study"} containing the
  following components:
    \item{pred_perf }{An array with dimension
      (\code{length(probs)}, \code{sims}, \code{length(lambda)).}}
    \item{bcthresh_args }{The arguments passed to \code{\link{bcthresh}}.}
    \item{rbc_args }{The arguments passed to \code{\link{rbc}}.}
    \item{call }{The call to \code{bc_sim_study}.}
}
\description{
Performs a simulation study to compare the extreme value predictive
performance over a range of training threshold levels after different
Box-Cox transformation.
}
\details{
The general idea is to simulated repeatedly data from a
  distribution for which a certain value of the Box-Cox transformation
  parameter will produce known behaviour.  This is achieved by simulating
  data using the function \code{\link{rbc}}.

  In the example below data are simulated for a random variable that has the
  following property: a Box-Cox transformation with parameter
  \eqn{\lambda = 2} of the variable has a unit exponential distribution,
  which is in the Generalised Pareto family.
  Therefore, we should find that, when transforming prior to a
  threshold-based extreme value anaysis, using \eqn{\lambda = 2} produces
  better performance, for lower threshold levels, that other values of
  \eqn{\lambda}.
}
\examples{
# Set a prior: flat for GP parameters, Haldane for P(exceedance)
prior_args <- list(prior = "flatflat", bin_prior = "haldane",
                   h_prior = list(min_xi = -Inf))
bcthresh_args <- c(list(lambda = c(1, 1.5, 2, 2.5, 3)), prior_args)
rbc_args <- list(n = 1000, lambda = 2)
res <- bc_sim_study(2, rbc_args = rbc_args, bcthresh_args = bcthresh_args)
plot(res)
}
